<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	    xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation=
				"http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				 http://www.springframework.org/schema/aop 
				 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
				 http://www.springframework.org/schema/tx 
				 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
				http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context-3.0.xsd">
				
	<!-- PropertyPlaceholderConfigurer 로 로드된 resource 는 ${  } 로 접근 가능 -->
	<bean id="propertyConfigurer"
				class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config/jdbc.properties" />
	</bean>

	<!-- DBCP (Apache Commons Database Connection) 사용 -->
	<bean id="dataSource"	
				class="org.apache.commons.dbcp.BasicDataSource" >
		<property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
	</bean>												 
												 
	<!-- ㅇ SqlSession 인스턴스를 생성하는 SqlSessionFactory 생성
	      ㅇ Factory Pattern  적용 :: Spring 의 FactoryBean interface 구현 -->
	<bean 	id="sqlSessionFactoryBean" 
					class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:sql/mybatis-config.xml"/>
	</bean>
	
	<!--  ㅇ SqlSessionTeampate 인스턴스생성
		   ㅇ Spring 과 연동시 사용하는 핵심 SqlSession 구현체
		   ㅇ Spring 에서 제공한는 Transaction 처리에 구조화된 SqlSession 구현체	 -->
	<bean		id="sqlSessionTemplate"		class="org.mybatis.spring.SqlSessionTemplate" >		
		<constructor-arg ref="sqlSessionFactoryBean"/>
	</bean>				
	

	<!--  ㅇ Annotation 기반 wiring 할수 있도록 component-scan 서술적기술 
    		ㅇ @Service /  @Repository  annotation 선언된 Bean 만 Wiring
    		ㅇ @Controller annotation 선언된 Bean 은 Scan 제외 -->
	<context:component-scan base-package="spring.service">
		<context:include-filter 	type="annotation" 
												expression="org.springframework.stereotype.Service"/>
		<context:include-filter 	type="annotation" 
												expression="org.springframework.stereotype.Repository"/>
		<context:exclude-filter 	type="annotation"
												expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	

</beans>